[tool.poetry]

name = "wppt"
version = "0.1.0"
description = "wppt provides an easy way to intercept, manage, manipulate and re-send a webhook to any Rest API or incoming webhook service (like JIRA)."

packages = [{ include = "wppt" }]

license = "GPL3"
authors = ["Gonzalo Rafuls <grafuls@redhat.com>"]

readme = "README.md"
homepage = "https://github.com/redhat-performance/wppt"
documentation = "https://github.com/redhat-performance/wppt/blob/main/README.md"
repository = "https://github.com/redhat-performance/wppt"

keywords = []
classifiers = [
    # TODO: update this list to match your application: https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]

python = "~3.11"

flask = "3.0.2"
requests = "2.31.0"
types-requests = "*"
pyyaml = "6.0.1"
types-PyYAML = "*"

[tool.poetry.dev-dependencies]

# Formatters
black = "^24.3"
tomli = "*"     # missing 'black' dependency
isort = "^5.10"
ipdb = "0.13.13"      # missing 'black' dependency

# Linters
mypy = "^1.0"
pydocstyle = "^6.1"
pylint = "~2.15"
wrapt = "*"         # missing 'pylint' dependency

# Testing
pytest = "^7.3"
pytest-describe = "^2.0"
pytest-expecter = "^3.0"
pytest-random = "*"
pytest-cov = "^4.1"
freezegun = "*"

# Reports
coveragespace = "^6.0"

# Documentation
mkdocs = "~1.3"
pygments = "^2.11.1"

# Tooling
pyinstaller = "5.13.1"
sniffer = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }

[tool.black]

quiet = true

[tool.isort]

profile = "black"

[tool.mypy]

ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true

cache_dir = ".cache/mypy/"

[tool.pytest.ini_options]

addopts = """
--strict-markers

-r sxX
--show-capture=log

--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""

cache_dir = ".cache/pytest/"

markers = []

[build-system]

requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
